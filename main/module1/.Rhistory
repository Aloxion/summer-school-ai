knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(readr)
library(dplyr)
library(lubridate)
DATASET2 <- read_csv("../../DATASET2.csv")
#View(DATASET2)
# Check how many NA values exist per variable
DATASET2 %>% summarise_all(~sum(is.na(.)))
install.packages("VIM")  # Only once
#install.packages("DEoptimR")
library(VIM)
library(readr)
library(dplyr)
library(lubridate)
library(psych)
# Rename datasets for clarity
clinical_data <- read_csv("../task1/task1_result.csv") # DATASET 1
biochem_data <- read_csv("../task2/DATASET2.csv")            # DATASET 2
library(readr)
library(dplyr)
library(lubridate)
library(psych)
# Rename datasets for clarity
clinical_data <- read_csv("../task1/task1_result.csv") # DATASET 1
biochem_data <- read_csv("../../DATASET2.csv")            # DATASET 2
diagnosis_data <- read_csv("../task3/task3_result.csv")      # Cleaned DATASET 3
# Merge clinical and biochemical data (inner join on ID)
merged1 <- merge(clinical_data, biochem_data, by = "ID", all = TRUE)  # Use all=TRUE to keep all patients
ncol(clinical_data)
ncol(biochem_data)
ncol(diagnosis_data)
ncol(merged1)
# Merge with diagnosis data
merged_all <- merge(merged1, diagnosis_data, by = "ID", all = TRUE)
# Replace NAs in diagnosis columns (columns 20 to 25) with 0
merged_all[, 20:25][is.na(merged_all[, 20:25])] <- 0
colSums(is.na(merged_all))
# Check merged result
dim(merged_all)
summary(merged_all)
# ---------------------------------------------
# Step 2: Impute missing values (e.g., with mean)
# ---------------------------------------------
# Example: Impute missing values in biochemical columns with the mean
# You can select specific columns or apply to all numeric ones
# Find numeric columns
numeric_cols <- sapply(merged_all, is.numeric)
# Impute missing values with column mean (safe for numeric only)
merged_all[, numeric_cols] <- lapply(merged_all[, numeric_cols], function(x) {
ifelse(is.na(x), mean(x, na.rm = TRUE), x)
})
# ---------------------------------------------
# Step 3: Double-check for remaining missing values
# ---------------------------------------------
colSums(is.na(merged_all))
# see merged_all for the merged output for Task 4:
# View(merged_all)
